version: "3.4"

networks:
  docker_network:
    driver: "bridge"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - 3030:3030
    volumes:
      - ./frontend/src:/app/src
      - ./frontend/tsconfig.json:/app/tsconfig.json
      - ./frontend/public:/app/public
    command: yarn start
    networks:
      - docker_network
    env_file:
      - ./frontend/.env.example
    depends_on:
      - postgres
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - 3031:3031
    volumes:
      - ./backend/src:/app/src
    command: yarn run start:dev
    networks:
      - docker_network
    env_file:
      - ./backend/.env.example
    depends_on:
      - postgres

  postgres:
    image: postgres:alpine
    ports:
      - 5000:5432
    networks:
      - docker_network
    env_file:
      - ./backend/.env.postgres.example

  mongo:
    image: mongo
    env_file:
      - ./backend/.env.example
    volumes:
      - ./backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - 27017:27017
